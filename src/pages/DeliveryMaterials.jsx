import React, { useState, useEffect } from 'react'
import { useParams, useNavigate, Link } from 'react-router-dom'
import { getDelivery, confirmDeliveryMaterials } from '../api/deliveries.js'
import { useAuth } from '../auth/AuthContext'

export default function DeliveryMaterials() {
  const { id } = useParams()
  const navigate = useNavigate()
  const { user } = useAuth()
  const [delivery, setDelivery] = useState(null)
  const [materials, setMaterials] = useState([])
  const [loading, setLoading] = useState(true)
  const [submitting, setSubmitting] = useState(false)

  useEffect(() => {
    loadDelivery()
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞—Ö –∏–∑ sessionStorage (–ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
    const materialsData = sessionStorage.getItem(`delivery_materials_${id}`)
    if (materialsData) {
      try {
        const parsed = JSON.parse(materialsData)
        if (parsed.results && Array.isArray(parsed.results)) {
          setMaterials(parsed.results.map((result, index) => ({
            id: index,
            name: result.data?.material_name || '',
            quantity: result.data?.quantity || '',
            size: result.data?.size || '',
            volume: result.data?.volume || '',
            weight: result.data?.weight || result.data?.netto || '',
            unit: result.data?.unit || '',
            supplier: result.data?.supplier || '',
            originalData: result.data
          })))
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤:', error)
      }
    }
  }, [id])

  const loadDelivery = async () => {
    try {
      setLoading(true)
      const data = await getDelivery(id)
      setDelivery(data)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å—Ç–∞–≤–∫–∏:', error)
      alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å—Ç–∞–≤–∫–∏')
    } finally {
      setLoading(false)
    }
  }

  const updateMaterial = (materialId, field, value) => {
    setMaterials(prev => prev.map(material => 
      material.id === materialId 
        ? { ...material, [field]: value }
        : material
    ))
  }

  const handleConfirm = async () => {
    if (materials.length === 0) {
      alert('–ù–µ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è')
      return
    }

    try {
      setSubmitting(true)
      
      const materialsData = {
        materials: materials.map(material => ({
          name: material.name,
          quantity: material.quantity,
          size: material.size,
          volume: material.volume,
          weight: material.weight,
          unit: material.unit,
          supplier: material.supplier
        }))
      }

      await confirmDeliveryMaterials(id, materialsData)
      
      // –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      sessionStorage.removeItem(`delivery_materials_${id}`)
      
      alert('–ú–∞—Ç–µ—Ä–∏–∞–ª—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã!')
      navigate(`/deliveries/${id}`)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤:', error)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤')
    } finally {
      setSubmitting(false)
    }
  }

  if (loading) {
    return (
      <div className="page">
        <div style={{
          display: 'flex',
          justifyContent: 'center',
          alignItems: 'center',
          height: '200px'
        }}>
          <div style={{
            width: '40px',
            height: '40px',
            border: '4px solid var(--border)',
            borderTop: '4px solid var(--brand)',
            borderRadius: '50%',
            animation: 'spin 1s linear infinite'
          }} />
        </div>
      </div>
    )
  }

  if (!delivery) {
    return (
      <div className="page">
        <div style={{
          textAlign: 'center',
          padding: '40px',
          color: 'var(--muted)'
        }}>
          <div style={{ fontSize: '48px', marginBottom: '16px' }}>‚ùå</div>
          <div style={{ fontSize: '18px' }}>–ü–æ—Å—Ç–∞–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</div>
        </div>
      </div>
    )
  }

  return (
    <div className="page">
      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
      <div style={{ marginBottom: '20px' }}>
        <Link 
          to={`/deliveries/${id}`}
          style={{
            color: 'var(--brand)',
            textDecoration: 'none',
            fontSize: '14px',
            display: 'flex',
            alignItems: 'center',
            gap: '4px'
          }}
        >
          ‚Üê –ù–∞–∑–∞–¥ –∫ –ø–æ—Å—Ç–∞–≤–∫–µ
        </Link>
      </div>

      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div style={{
        background: 'var(--panel)',
        border: '1px solid var(--border)',
        borderRadius: '12px',
        padding: '24px',
        marginBottom: '20px',
        boxShadow: '0 1px 4px rgba(0,0,0,0.1)'
      }}>
        <div style={{
          display: 'flex',
          justifyContent: 'space-between',
          alignItems: 'center'
        }}>
          <div>
            <h1 style={{
              margin: '0 0 8px 0',
              fontSize: '28px',
              fontWeight: '700',
              color: 'var(--text)'
            }}>
              üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
            </h1>
            <p style={{
              margin: 0,
              color: 'var(--muted)',
              fontSize: '16px'
            }}>
              {delivery.title || `–ü–æ—Å—Ç–∞–≤–∫–∞ #${delivery.id}`}
            </p>
          </div>

          <button
            onClick={handleConfirm}
            disabled={submitting || materials.length === 0}
            style={{
              padding: '12px 24px',
              background: 'var(--brand)',
              color: 'white',
              border: 'none',
              borderRadius: '8px',
              fontSize: '16px',
              fontWeight: '600',
              cursor: submitting || materials.length === 0 ? 'not-allowed' : 'pointer',
              opacity: submitting || materials.length === 0 ? 0.7 : 1,
              transition: 'all 0.2s ease'
            }}
            onMouseEnter={(e) => {
              if (!submitting && materials.length > 0) {
                e.target.style.transform = 'translateY(-1px)'
              }
            }}
            onMouseLeave={(e) => {
              if (!submitting && materials.length > 0) {
                e.target.style.transform = 'translateY(0)'
              }
            }}
          >
            {submitting ? 'üîÑ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ...' : '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã'}
          </button>
        </div>
      </div>

      {/* –ú–∞—Ç–µ—Ä–∏–∞–ª—ã */}
      {materials.length === 0 ? (
        <div style={{
          background: 'var(--panel)',
          border: '1px solid var(--border)',
          borderRadius: '12px',
          padding: '40px',
          textAlign: 'center',
          boxShadow: '0 1px 4px rgba(0,0,0,0.1)'
        }}>
          <div style={{ fontSize: '48px', marginBottom: '16px' }}>üìã</div>
          <div style={{ fontSize: '18px', marginBottom: '8px', color: 'var(--text)' }}>
            –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞—Ö
          </div>
          <div style={{ fontSize: '14px', color: 'var(--muted)' }}>
            –î–∞–Ω–Ω—ã–µ –æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞—Ö –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–ª—É—á–µ–Ω—ã –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
          </div>
        </div>
      ) : (
        <div style={{
          display: 'grid',
          gap: '20px'
        }}>
          {materials.map((material, index) => (
            <div
              key={material.id}
              style={{
                background: 'var(--panel)',
                border: '1px solid var(--border)',
                borderRadius: '12px',
                padding: '24px',
                boxShadow: '0 1px 4px rgba(0,0,0,0.1)'
              }}
            >
              <div style={{
                display: 'flex',
                alignItems: 'center',
                gap: '12px',
                marginBottom: '20px'
              }}>
                <div style={{
                  width: '32px',
                  height: '32px',
                  borderRadius: '50%',
                  background: 'var(--brand)',
                  color: 'white',
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center',
                  fontSize: '14px',
                  fontWeight: '600'
                }}>
                  {index + 1}
                </div>
                <h3 style={{
                  margin: 0,
                  fontSize: '18px',
                  fontWeight: '600',
                  color: 'var(--text)'
                }}>
                  –ú–∞—Ç–µ—Ä–∏–∞–ª #{index + 1}
                </h3>
              </div>

              <div style={{
                display: 'grid',
                gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',
                gap: '16px'
              }}>
                <div>
                  <label style={{
                    display: 'block',
                    fontSize: '12px',
                    fontWeight: '600',
                    color: 'var(--muted)',
                    marginBottom: '6px'
                  }}>
                    –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞
                  </label>
                  <input
                    type="text"
                    value={material.name}
                    onChange={(e) => updateMaterial(material.id, 'name', e.target.value)}
                    style={{
                      width: '100%',
                      padding: '10px 12px',
                      border: '1px solid var(--border)',
                      borderRadius: '6px',
                      fontSize: '14px',
                      background: 'var(--panel)',
                      color: 'var(--text)'
                    }}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞"
                  />
                </div>

                <div>
                  <label style={{
                    display: 'block',
                    fontSize: '12px',
                    fontWeight: '600',
                    color: 'var(--muted)',
                    marginBottom: '6px'
                  }}>
                    –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ
                  </label>
                  <input
                    type="text"
                    value={material.quantity}
                    onChange={(e) => updateMaterial(material.id, 'quantity', e.target.value)}
                    style={{
                      width: '100%',
                      padding: '10px 12px',
                      border: '1px solid var(--border)',
                      borderRadius: '6px',
                      fontSize: '14px',
                      background: 'var(--panel)',
                      color: 'var(--text)'
                    }}
                    placeholder="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"
                  />
                </div>

                <div>
                  <label style={{
                    display: 'block',
                    fontSize: '12px',
                    fontWeight: '600',
                    color: 'var(--muted)',
                    marginBottom: '6px'
                  }}>
                    –†–∞–∑–º–µ—Ä
                  </label>
                  <input
                    type="text"
                    value={material.size}
                    onChange={(e) => updateMaterial(material.id, 'size', e.target.value)}
                    style={{
                      width: '100%',
                      padding: '10px 12px',
                      border: '1px solid var(--border)',
                      borderRadius: '6px',
                      fontSize: '14px',
                      background: 'var(--panel)',
                      color: 'var(--text)'
                    }}
                    placeholder="–†–∞–∑–º–µ—Ä"
                  />
                </div>

                <div>
                  <label style={{
                    display: 'block',
                    fontSize: '12px',
                    fontWeight: '600',
                    color: 'var(--muted)',
                    marginBottom: '6px'
                  }}>
                    –û–±—ä–µ–º
                  </label>
                  <input
                    type="text"
                    value={material.volume}
                    onChange={(e) => updateMaterial(material.id, 'volume', e.target.value)}
                    style={{
                      width: '100%',
                      padding: '10px 12px',
                      border: '1px solid var(--border)',
                      borderRadius: '6px',
                      fontSize: '14px',
                      background: 'var(--panel)',
                      color: 'var(--text)'
                    }}
                    placeholder="–û–±—ä–µ–º"
                  />
                </div>

                <div>
                  <label style={{
                    display: 'block',
                    fontSize: '12px',
                    fontWeight: '600',
                    color: 'var(--muted)',
                    marginBottom: '6px'
                  }}>
                    –í–µ—Å (–ù–µ—Ç—Ç–æ)
                  </label>
                  <input
                    type="text"
                    value={material.weight}
                    onChange={(e) => updateMaterial(material.id, 'weight', e.target.value)}
                    style={{
                      width: '100%',
                      padding: '10px 12px',
                      border: '1px solid var(--border)',
                      borderRadius: '6px',
                      fontSize: '14px',
                      background: 'var(--panel)',
                      color: 'var(--text)'
                    }}
                    placeholder="–í–µ—Å"
                  />
                </div>

                <div>
                  <label style={{
                    display: 'block',
                    fontSize: '12px',
                    fontWeight: '600',
                    color: 'var(--muted)',
                    marginBottom: '6px'
                  }}>
                    –ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è
                  </label>
                  <input
                    type="text"
                    value={material.unit}
                    onChange={(e) => updateMaterial(material.id, 'unit', e.target.value)}
                    style={{
                      width: '100%',
                      padding: '10px 12px',
                      border: '1px solid var(--border)',
                      borderRadius: '6px',
                      fontSize: '14px',
                      background: 'var(--panel)',
                      color: 'var(--text)'
                    }}
                    placeholder="–ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è"
                  />
                </div>

                <div>
                  <label style={{
                    display: 'block',
                    fontSize: '12px',
                    fontWeight: '600',
                    color: 'var(--muted)',
                    marginBottom: '6px'
                  }}>
                    –ü–æ—Å—Ç–∞–≤—â–∏–∫
                  </label>
                  <input
                    type="text"
                    value={material.supplier}
                    onChange={(e) => updateMaterial(material.id, 'supplier', e.target.value)}
                    style={{
                      width: '100%',
                      padding: '10px 12px',
                      border: '1px solid var(--border)',
                      borderRadius: '6px',
                      fontSize: '14px',
                      background: 'var(--panel)',
                      color: 'var(--text)'
                    }}
                    placeholder="–ü–æ—Å—Ç–∞–≤—â–∏–∫"
                  />
                </div>
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  )
}
